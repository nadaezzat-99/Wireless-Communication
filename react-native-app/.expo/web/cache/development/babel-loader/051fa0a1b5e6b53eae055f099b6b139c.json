{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState([1, 2, 3, 4, 5, 6]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sec = _useState4[0],\n      setSec = _useState4[1];\n\n  for (var i = 0; i < 20; i++) {\n    label.push(i);\n  }\n\n  function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  setInterval(function () {\n    setSec(sec += 1);\n  }, 1000);\n  useEffect(function () {\n    return getData();\n  }, [sec]);\n  return _jsx(View, {\n    children: _jsx(LineChart, {\n      data: {\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n        datasets: [{\n          data: data.map(function (item) {\n            return item;\n          })\n        }]\n      },\n      width: 1220,\n      height: 220,\n      yAxisInterval: 1,\n      chartConfig: {\n        decimalPlaces: 2,\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(255, 255, 255, \" + opacity + \")\";\n        },\n        labelColor: function labelColor() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(255, 255, 255, \" + opacity + \")\";\n        },\n        style: {\n          borderRadius: 16\n        },\n        propsForDots: {\n          r: \"6\",\n          strokeWidth: \"2\",\n          stroke: \"#ffa726\"\n        }\n      }\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["D:/IOT tasks/Wireless-Communication/react-native-app/App.js"],"names":["StatusBar","useEffect","useState","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","App","data","setData","sec","setSec","i","label","push","getData","setInterval","labels","datasets","map","item","decimalPlaces","color","opacity","labelColor","style","borderRadius","propsForDots","r","strokeWidth","stroke","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;AAEA,SACEC,SADF,EAEGC,QAFH,EAGGC,QAHH,EAIGC,aAJH,EAKGC,iBALH,EAMGC,eANH,QAOQ,wBAPR;;AAQA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAqBP,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAD,CAA7B;AAAA;AAAA,MAAKQ,IAAL;AAAA,MAAYC,OAAZ;;AACA,mBAAiBT,QAAQ,CAAC,CAAD,CAAzB;AAAA;AAAA,MAAIU,GAAJ;AAAA,MAAQC,MAAR;;AAIA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC,EAAf,EAAkBA,CAAC,EAAnB,EACA;AACEC,IAAAA,KAAK,CAACC,IAAN,CAAWF,CAAX;AACD;;AACD,WAAeG,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQAC,EAAAA,WAAW,CAAC,YAAM;AAChBL,IAAAA,MAAM,CAACD,GAAG,IAAE,CAAN,CAAN;AACD,GAFU,EAER,IAFQ,CAAX;AAGAX,EAAAA,SAAS,CAAC;AAAA,WAAIgB,OAAO,EAAX;AAAA,GAAD,EAAe,CAACL,GAAD,CAAf,CAAT;AACA,SACF,KAAC,IAAD;AAAA,cAEE,KAAC,SAAD;AACE,MAAA,IAAI,EAAE;AAEJO,QAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,CAFJ;AAGJC,QAAAA,QAAQ,EAAE,CACR;AAIEV,UAAAA,IAAI,EAAGA,IAAI,CAACW,GAAL,CAAS,UAACC,IAAD;AAAA,mBAAQA,IAAR;AAAA,WAAT;AAJT,SADQ;AAHN,OADR;AAaE,MAAA,KAAK,EAAE,IAbT;AAcE,MAAA,MAAM,EAAE,GAdV;AAiBE,MAAA,aAAa,EAAE,CAjBjB;AAkBE,MAAA,WAAW,EAAE;AAIXC,QAAAA,aAAa,EAAE,CAJJ;AAKXC,QAAAA,KAAK,EAAE;AAAA,cAACC,OAAD,uEAAW,CAAX;AAAA,0CAAwCA,OAAxC;AAAA,SALI;AAMXC,QAAAA,UAAU,EAAE;AAAA,cAACD,OAAD,uEAAW,CAAX;AAAA,0CAAwCA,OAAxC;AAAA,SAND;AAOXE,QAAAA,KAAK,EAAE;AACLC,UAAAA,YAAY,EAAE;AADT,SAPI;AAUXC,QAAAA,YAAY,EAAE;AACZC,UAAAA,CAAC,EAAE,GADS;AAEZC,UAAAA,WAAW,EAAE,GAFD;AAGZC,UAAAA,MAAM,EAAE;AAHI;AAVH;AAlBf;AAFF,IADE;AA6CD;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport {\r\n  LineChart,\r\n   BarChart,\r\n   PieChart,\r\n   ProgressChart,\r\n   ContributionGraph,\r\n   StackedBarChart\r\n } from \"react-native-chart-kit\";\r\nexport default function App() {\r\n  let [data , setData]=useState([1,2,3,4,5,6])\r\n  let[sec,setSec]= useState(0)\r\n\r\n\r\n\r\n  for (let i=0;i<20;i++)\r\n  {\r\n    label.push(i)\r\n  }\r\n  async function getData()\r\n  {//http://localhost:5000/temp\r\n    // let response = await fetch(\"\")\r\n    // //let json = await response.json()\r\n    // setData(response)\r\n    // console.log(response)\r\n\r\n  }\r\n  setInterval(() => {\r\n    setSec(sec+=1)\r\n  }, 1000);\r\n  useEffect(()=>getData(),[sec])\r\n  return (\r\n<View>\r\n  {/* <Text>Bezier Line Chart</Text> */}\r\n  <LineChart\r\n    data={{\r\n//this is x-axis data\r\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\r\n      datasets: [\r\n        {\r\n          //this is y-axis       \r\n/*you need to add your data here from JSON, and remember the data you are requesting should be integer because it is line chart*/\r\n          \r\n          data:  data.map((item)=>item) \r\n        }\r\n      ]\r\n    }}\r\n    width={1220} // from react-native\r\n    height={220}\r\n    // yAxisLabel=\"students\"\r\n    // yAxisSuffix=\"k\"\r\n    yAxisInterval={1} // optional, defaults to 1\r\n    chartConfig={{\r\n      // backgroundColor: \"#e26a00\",\r\n      // backgroundGradientFrom: \"#fb8c00\",\r\n      // backgroundGradientTo: \"#ffa726\",\r\n      decimalPlaces: 2, // optional, defaults to 2dp\r\n      color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n      labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n      style: {\r\n        borderRadius: 16\r\n      },\r\n      propsForDots: {\r\n        r: \"6\",\r\n        strokeWidth: \"2\",\r\n        stroke: \"#ffa726\"\r\n      }\r\n    }}\r\n    // bezier\r\n    // style={{\r\n    //   marginVertical: 8,\r\n    //   borderRadius: 16\r\n    // }}\r\n  />\r\n</View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}