{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState([1, 2, 3, 4, 5, 6]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      temp_chart = _useState4[0],\n      setTemp_chart = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pressure_chart = _useState6[0],\n      setPressure_chart = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      sec = _useState8[0],\n      setSec = _useState8[1];\n\n  var label = [];\n\n  for (var i = 0; i < 20; i++) {\n    label.push(i);\n  }\n\n  function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  setInterval(function () {\n    setSec(sec += 1);\n  }, 1000);\n  useEffect(function () {\n    return getData();\n  }, [sec]);\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        children: \" Readings visulaization\"\n      }), _jsx(LineChart, {\n        data: {\n          labels: label.map(function (index) {\n            return index;\n          }),\n          datasets: [{\n            label: label.length + \" Temperature Readings\",\n            data: data.map(function (item) {\n              return item;\n            })\n          }]\n        },\n        width: 1220,\n        height: 220,\n        yAxisInterval: 2,\n        chartConfig: {\n          backgroundGradientFrom: \"blue\",\n          backgroundGradientTo: \"#ffa726\",\n          decimalPlaces: 2,\n          color: function color() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.5;\n            return \"rgba(255, 255, 255, \" + opacity + \")\";\n          },\n          labelColor: function labelColor() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.5;\n            return \"rgba(255, 255, 255, \" + opacity + \")\";\n          },\n          style: {\n            borderRadius: 16\n          },\n          propsForDots: {\n            r: \"6\",\n            strokeWidth: \"2\",\n            stroke: \"#ffa726\"\n          }\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'rgba(127, 255, 212, 0.062)',\n    alignItems: 'center',\n    justifyContent: 'start',\n    marginStart: 10\n  }\n});","map":{"version":3,"sources":["D:/IOT tasks/Wireless-Communication/react-native-app/App.js"],"names":["StatusBar","useEffect","useState","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","App","data","setData","temp_chart","setTemp_chart","pressure_chart","setPressure_chart","sec","setSec","label","i","push","getData","setInterval","styles","container","labels","map","index","datasets","length","item","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","labelColor","style","borderRadius","propsForDots","r","strokeWidth","stroke","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","marginStart"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport {\r\n  LineChart,\r\n   BarChart,\r\n   PieChart,\r\n   ProgressChart,\r\n   ContributionGraph,\r\n   StackedBarChart\r\n } from \"react-native-chart-kit\";\r\nexport default function App() {\r\n  let [data , setData]=useState([1,2,3,4,5,6])\r\n  let [temp_chart,setTemp_chart]=useState([]);\r\n  let [pressure_chart,setPressure_chart]=useState([]);\r\n  let[sec,setSec]= useState(0)\r\n\r\n\r\nvar label=[]\r\n  for (let i=0;i<20;i++)\r\n  {\r\n    label.push(i)\r\n  }\r\n  async function getData()\r\n  {//http://localhost:5000/temp\r\n    // let response = await fetch(\"\")\r\n    // //let json = await response.json()\r\n    // setTemp_chart(response)\r\n    // console.log(response)\r\n\r\n  }\r\n  setInterval(() => {\r\n    setSec(sec+=1)\r\n  }, 1000);\r\n  useEffect(()=>getData(),[sec])\r\n  return (\r\n    <>\r\n<View style={styles.container}>\r\n  {/* <Text>Bezier Line Chart</Text> */}\r\n  <Text> Readings visulaization</Text>\r\n  <LineChart\r\n    data={{\r\n//this is x-axis data\r\n      labels: label.map((index) => index),\r\n      datasets: [\r\n        {label: `${label.length} Temperature Readings`,\r\n          //this is y-axis       \r\n/*you need to add your data here from JSON, and remember the data you are requesting should be integer because it is line chart*/\r\n          \r\n          data:  data.map((item)=>item) \r\n        }\r\n      ]\r\n    }}\r\n    width={1220} // from react-native\r\n    height={220}\r\n    yAxisInterval={2} // optional, defaults to 1\r\n    chartConfig={{\r\n      // backgroundColor: \"blue\",\r\n      backgroundGradientFrom: \"blue\",\r\n      backgroundGradientTo: \"#ffa726\",\r\n      decimalPlaces: 2, // optional, defaults to 2dp\r\n      color: (opacity = 0.5) => `rgba(255, 255, 255, ${opacity})`,\r\n      labelColor: (opacity = 0.5) => `rgba(255, 255, 255, ${opacity})`,\r\n      style: {\r\n        borderRadius: 16\r\n      },\r\n      propsForDots: {\r\n        r: \"6\",\r\n        strokeWidth: \"2\",\r\n        stroke: \"#ffa726\"\r\n      }\r\n    }}\r\n    // bezier\r\n    // style={{\r\n    //   marginVertical: 8,\r\n    //   borderRadius: 16\r\n    // }}\r\n  />\r\n</View></>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(127, 255, 212, 0.062)',\r\n    alignItems: 'center',\r\n    justifyContent: 'start',\r\n    marginStart:10\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}